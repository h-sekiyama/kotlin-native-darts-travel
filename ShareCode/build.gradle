apply plugin: "kotlin-multiplatform"
apply plugin: "kotlinx-serialization"
apply plugin: 'kotlin-android-extensions'

kotlin {
    targets {
        final def iOSTarget = System.getenv("SDK_NAME")?.startsWith("iphoneos") ? presets.iosArm64 : presets.iosX64
        fromPreset(iOSTarget, "ios") {
            compilations.main.outputKinds("FRAMEWORK")
        }
        fromPreset(presets.jvm, "android")
    }
    sourceSets {
        commonMain.dependencies {
            api "org.jetbrains.kotlin:kotlin-stdlib-common"
            api 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
            api 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.6'
            api "io.ktor:ktor-client-android:$ktor_version"
            api "io.ktor:ktor-client-gson:$ktor_version"
            api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
            api "io.ktor:ktor-client-core:$ktor_version"
            api "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
            api "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha02"
            api 'com.squareup.okhttp3:logging-interceptor:3.9.1'
            api "com.squareup.okhttp3:okhttp:3.14.1"
        }
        androidMain.dependencies {
            api "org.jetbrains.kotlin:kotlin-stdlib"
        }
    }
}
configurations {
    compileClasspath
}

task packForXCode(type: Sync) {
    final File frameworkDir = new File(buildDir, "xcode-frameworks")
    final String mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'

    inputs.property "mode", mode
    dependsOn kotlin.targets.ios.compilations.main.linkTaskName("FRAMEWORK", mode)

    from { kotlin.targets.ios.compilations.main.getBinary("FRAMEWORK", mode).parentFile }
    into frameworkDir

    doLast {
        new File(frameworkDir, 'gradlew').with {
            text = "#!/bin/bash\nexport 'JAVA_HOME=${System.getProperty("java.home")}'\ncd '${rootProject.rootDir}'\n./gradlew \$@\n"
            setExecutable(true)
        }
    }
}

tasks.build.dependsOn packForXCode